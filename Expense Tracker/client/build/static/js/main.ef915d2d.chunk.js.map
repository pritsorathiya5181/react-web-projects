{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/AddTransaction.js","utils/format.js","components/Balance.js","components/Header.js","components/IncomeExpense.js","components/Transaction.js","components/TransactionList.js","App.js","index.js"],"names":["state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","AddTransaction","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","newTransaction","Math","floor","random","className","htmlFor","onChange","target","placeholder","numberWithCommas","x","toString","replace","Banner","balance","map","tra","toFixed","Header","IncomeExpense","income","expense","abs","Transaction","sign","onClick","TransactionList","useEffect","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef915d2d.chunk.js","sourcesContent":["export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'GET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: action.payload\r\n            }\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload]\r\n            }\r\n        case 'TRANSACTION_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react'\r\n\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n    transactions: [\r\n        // { id: 1, text: 'Flower', amount: -20 },\r\n        // { id: 2, text: 'Salary', amount: 300 },\r\n    ],\r\n    error: null,\r\n    loading: true\r\n\r\n}\r\n\r\n// create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component \r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    //Actions\r\n    async function getTransactions() {\r\n        try {\r\n            const res = await axios.get('/api/v1/transactions');\r\n\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    async function deleteTransaction(id) {\r\n        try {\r\n            await axios.delete(`/api/v1/transactions/${id}`);\r\n\r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    async function addTransaction(transaction) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.post('/api/v1/transactions', transaction, config);\r\n\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getTransactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}","import React, { useContext, useState } from 'react';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const submitTrans = e => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random(1, 10) * 1000),\r\n            text,\r\n            amount: +amount\r\n        };\r\n\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={submitTrans}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => { setText(e.target.value) }}\r\n                        placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n            (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" value={amount} onChange={(e) => { setAmount(e.target.value) }}\r\n                        placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","export function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React, { useContext } from 'react'\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Banner = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    let balance = 0;\r\n    transactions.map(tra =>\r\n        balance += tra.amount\r\n    );\r\n    balance = balance.toFixed(2);\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1 id=\"balance\">${numberWithCommas(balance)}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const IncomeExpense = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    let income = 0;\r\n    let expense = 0;\r\n    transactions.map(tra => {\r\n        if (tra.amount > 0) {\r\n            income += tra.amount\r\n        } else {\r\n            expense += Math.abs(tra.amount)\r\n        }\r\n    })\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">${numberWithCommas(income.toFixed(2))}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">${numberWithCommas(expense.toFixed(2))}</p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Transaction = ({ tra }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const sign = tra.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={tra.amount < 0 ? \"minus\" : \"plus\"}>\r\n            {tra.text} <span>{sign}${numberWithCommas(Math.abs(tra.amount))}</span>\r\n            <button className=\"delete-btn\" onClick={() => { deleteTransaction(tra._id) }}>x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionList = () => {\r\n    // const context = useContext(GlobalContext);\r\n    // console.log(context.transactions);\r\n    const { transactions, getTransactions } = useContext(GlobalContext);\r\n    // console.log(transactions);\r\n\r\n    useEffect(() => {\r\n        getTransactions();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (\r\n                    <Transaction\r\n                        key={transaction.id}\r\n                        tra={transaction}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import './App.css'\n\nimport { AddTransaction } from './components/AddTransaction';\nimport { Banner } from './components/Balance';\nimport { GlobalProvider } from './context/GlobalState';\nimport { Header } from './components/Header';\nimport { IncomeExpense } from './components/IncomeExpense';\nimport React from 'react';\nimport { TransactionList } from './components/TransactionList';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Banner />\n        <IncomeExpense />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}